CLEARSCREEN.
SET IPU0 TO CONFIG:IPU.
SET CONFIG:IPU TO 300.
SET TERMINAL:REVERSE TO TRUE.
SET TERMINAL:WIDTH TO 50.
SET TERMINAL:HEIGHT TO 15.

// ========================================================================

DECLARE TURNSPEED TO 80.
DECLARE TURNANGLE TO 10.
DECLARE TURNSTART TO 0.
DECLARE TURNEND TO 40000.
DECLARE TARGETORBIT TO 80000.
DECLARE PITCH TO 90.

LOCK AIRSPD TO SHIP:AIRSPEED.
// LOCK ORBSPD TO SHIP:VELOCITY:ORBIT:MAG.
LOCK ALT TO SHIP:ALTITUDE.
LOCK TTA TO ETA:APOAPSIS.
LOCK PITCH TO ((90 - TURNANGLE) * (ALT - TURNSTART) / (TURNEND - TURNSTART)).

DECLARE PHASE TO 0.
// 0 - preflight
// 1 - climb
// 2 - turn
// 3 - throttle control
// 4 - level off
// 5 - in space
// 6 - final orbit

SAS OFF.
LOCK STEERING TO lookdirup(heading(90,90):vector, ship:facing:topvector).
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 1.

PHASESHIFT(0).
STAGE.
WAIT 1.
STAGE.
WAIT UNTIL AIRSPD > 3.
PHASESHIFT(1).


// ========================================================================

WHEN PHASE = 2 THEN {
//	IF PHASE = 2 {PRESERVE.}
	PRESERVE.
	LOCK STEERING TO lookdirup(heading(90,90-TURNANGLE-PITCH):vector, ship:facing:topvector).
	PRINT "STEERING @ " + ROUND(90-TURNANGLE-PITCH,2) AT(2,3).
}


SET apoapsis_setpoint TO 40.
LOCK P TO apoapsis_setpoint - TTA.
SET P0 TO P.
SET I TO 0.
SET D TO 0.
SET Kp TO 0.156.
SET Ki TO 0.101.
SET Kd TO 0.060.
LOCK in_deadband TO ABS(P) < 0.01.
LOCK dthrott TO Kp * P + Ki * I + Kd * D.
SET thrott TO 0.
SET t0 TO TIME:SECONDS.

WHEN PHASE = 3 THEN {
//	IF PHASE = 3 {PRESERVE.}
	PRESERVE.
	SET dt TO TIME:SECONDS - t0.
	IF dt > 0 {
		IF NOT in_deadband {
			SET I TO I + P * dt.
			SET D TO (P - P0) / dt.

			// If Ki is non-zero, then limit Ki*I to [-1,1]
			IF Ki > 0 {
				SET I TO MIN(1.0/Ki, MAX(-1.0/Ki, I)).
			}

			// set throttle but keep in range [0,1]
			SET SHIP:CONTROL:PILOTMAINTHROTTLE to MIN(1, MAX(0, thrott + dthrott)).
			PRINT "THROTTLING @ " + ROUND(SHIP:CONTROL:PILOTMAINTHROTTLE,2) AT(2,2).

			SET P0 TO P.
			SET t0 TO TIME:SECONDS.
		}
	}
}


WAIT UNTIL AIRSPD >= TURNSPEED.
PHASESHIFT(2).
WAIT UNTIL TTA >= 40.
PHASESHIFT(3).
SAS ON.
WAIT 3.
SET SASMODE TO "PROGRADE".
WAIT UNTIL ALT >= TURNEND.
PHASESHIFT(4).


// ========================================================================

UNLOCK STEERING.
SAS ON.
WAIT 1.
SET SASMODE TO "PROGRADE".

WAIT UNTIL ORBIT:APOAPSIS > TARGETORBIT.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
SAS OFF.

WAIT UNTIL ALT >= 70000.
PHASESHIFT(5).


// ========================================================================

SET WARP TO 0.
WAIT 5.
AG10 ON.  // blow the fairing
UNTIL ORBIT:APOAPSIS >= TARGETORBIT {
	SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.05.
}
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
WAIT 5.

SET GK TO 3.5316000*10^12.
SET RADIUS TO 600000 + APOAPSIS.
SET SMA TO 600000 + ((ORBIT:PERIAPSIS + ORBIT:APOAPSIS) / 2).
SET V1 TO (GK/RADIUS)^.5.
SET V2 TO (GK*((2/RADIUS)-(1/SMA)))^.5.
SET DV TO ABS(V1-V2).
SET ACCELERATION TO ((MAXTHRUST*0.25)/MASS).
SET BURNTIME TO (DV/ACCELERATION).
SET STARTTIME TO (BURNTIME/2).

SET WARP TO 2.
WAIT UNTIL ETA:APOAPSIS <= (121 + STARTTIME).
SET WARP TO 1.
WAIT UNTIL ETA:APOAPSIS <= (63 + STARTTIME).
SET WARP TO 0.
SAS ON.
WAIT 3.
SET SASMODE TO "PROGRADE".

SET CALT TO ORBIT:APOAPSIS * 0.9975.
SET XALT TO CALT * 0.99.
SET XORBIT TO ORBIT:APOAPSIS * 1.05.

PRINT " APO: " + ORBIT:APOAPSIS + "m" AT(2,4).
PRINT "PERI: " + ORBIT:PERIAPSIS + "m" AT(2,5).
PRINT "CALT: " + CALT + "m" AT(2,6).
PRINT "XALT: " + XALT + "m" AT(2,7).
PRINT "XORB: " + XORBIT + "m" AT(2,8).

WAIT UNTIL ETA:APOAPSIS <= STARTTIME.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.25.

WAIT UNTIL ORBIT:PERIAPSIS >= XALT.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO .05.

WAIT UNTIL ORBIT:PERIAPSIS >= CALT OR ORBIT:APOAPSIS >= XORBIT.
SET SHIP:CONTROL:PILOTMAINTHROTTLE TO 0.
SAS OFF.
PHASESHIFT(6).

// ========================================================================

PRINT "ORBIT ACHIEVED.  SAS OFF.  HAPPY SPACEFARING!" AT(2,13).
SET CONFIG:IPU TO IPU0.
WAIT 0.5.
PRINT " ".

// ========================================================================

FUNCTION PHASESHIFT {
	PARAMETER VAL.
	
	CLEARSCREEN.
	PRINT "FLIGHT PHASE" AT(36,1).
	PRINT "1 2 3 4 5 6" AT(36,2).
	PRINT "*":PADLEFT(VAL*2) + " " AT(35,3).
	SET PHASE TO VAL.
}
