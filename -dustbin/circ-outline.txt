params apoalt, perialt
	if no perialt, set to apoalt (i.e., both circalt)
?? param manueverlist // see below

manueverlist of alt,ta pairs
	ex:	perialt,180
		apoalt,0
	?? pass in two alts, assume apo|180 first?
	?? pass in several pairs to gradually reach target; accept as parameter?
	ex:	perialt,180 // circularize after launch
		apoalt,90   // raise apo from 90 degrees TA in orbit
		perialt,180 // raise peri to circularize

for each in list
	nextManeuver(alt,ta) // function actually needed?
		return node
	add node
	warp to node
	execute burn
	remove node


================================================================================

apoalt,altperi,ta
targetapo,targetperi,ta

------------------------------------------

180 x 80 -> 180 x 180

1:
180,80,180
180,180,180
2: // ?? optional?
181,180,0 // assuming inaccuracy
180,180,0

------------------------------------------

180 x 80 -> 270 x 250

1:
180,80,0
270,80,0
2:
270,80,180
270,250,180

1:   // alternate approach
180,80,180
250,180,0
2:
250,180,180
270,250,0

1:   // alternate approach
180,80,180
270,180,0
2:
270,180,180
270,250,180

------------------------------------------

180 x 80 -> 70 x 70

1:
180,80,180
180,70,180
2:
180,70,0
70,70,0

1:   // alternate approach
180,80,180
80,70,0
2:
80,70,180
70,70,0

------------------------------------------

180 x 80 -> 100 x 100
1:
180,80,180
180,100,180
2:
180,100,0
100,100,0

------------------------------------------

180 x 80 -> 200 x 100
1:
180,80,180
180,100,180
2:
180,100,0
200,100,0

------------------------------------------

180 x 80 -> 300 x 70
1:
180,80,180
180,70,180
2:
180,70,0
300,70,0



burn at apo
	change old peri to new peri
	if new apo != apo
		flip ta
		re-run apo burn, skip peri burn
burn at peri
	change old apo to new apo
	if new peri != peri
		flip ta




initalorbit : apo, peri
finalorbit: apo, peri

if launch cirularize
	initial: ap0, pe0
	target: ap0, ap0
if (peri < atmo) burn at apo to raise peri above atmo
	initial: ap0, pe0
	target: ap0, pe1
	
if (new peri > apo) burn 1 at 0, burn 2 at 180
			else burn 1 at 180, burn 2 at 0
	initial: ap0, pe0
	target: ap1, pe1
	if pe1 > ap0
		ta0 0
		ta1 180
	else
		ta0 180
		ta1 0



function accepts (ap0,pe0),(ap1,pe1)
	node1 = 180
	if ap0 < pe1
		node1 = 0
	node2 = abs(180-node1)

	next node: apo
	if node == 0 then next node: peri




function apoburn (targetPeAlt)
	if targetPeAlt > orbit:ap
		endTa = 0 else endTa = 180
	getDV(o:a,o:p,180,
		o:a,targetPeAlt,endTa)

function periburn (targetApAlt)
	if targetApAlt < orbit:pe
		endTa = 180 else endTa = 0
	getDV(o:a,o:p,0,
		targetApAlt,o:p,endTa)




burns(
	burn1(180,180)
	burn2(0,0)
)

if targetPE > orbit:apoapsis
	burn1(0,0)
	burn1(180,180)

